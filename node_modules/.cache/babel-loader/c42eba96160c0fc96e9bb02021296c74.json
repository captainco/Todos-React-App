{"ast":null,"code":"var _jsxFileName = \"/home/quocco/Desktop/Todos-React-App/src/App.js\";\nimport React, { Component } from 'react'; // import Stat               from './Components/StatComponent';\n// import Todo               from './Components/TodoComponent';\n// import NewTodoForm        from './Components/NewTodoFormComponent';\n\nimport './App.css';\n\nclass Stat extends Component {\n  render() {\n    const _this$props = this.props,\n          done = _this$props.done,\n          total = _this$props.total;\n    return React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"Done: \", done), \"/\", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"Total: \", total));\n  }\n\n}\n\nclass NewTodoForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newTodoName: ''\n    };\n  }\n\n  onInputChange(newTodoName) {\n    this.setState({\n      newTodoName\n    });\n  }\n\n  render() {\n    const onNewToDo = this.props.onNewToDo;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: even => {\n        this.onInputChange(even.target.value);\n      },\n      value: this.state.newTodoName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), \"\\xA0\", React.createElement(\"button\", {\n      types: \"submit\",\n      onClick: () => {\n        onNewToDo({\n          name: this.state.newTodoName,\n          done: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Add\"));\n  }\n\n}\n\nclass Todo extends Component {\n  render() {\n    const todo = this.props.todo;\n    const todoLableStyle = this.props.todo.done ? {\n      textDecoration: 'line-through',\n      color: \"gray\"\n    } : {};\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: this.props.onDoneChange,\n      checked: todo.done,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: todoLableStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, todo.name));\n  }\n\n}\n\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [{\n        name: 'Todo 1',\n        done: true\n      }, {\n        name: 'Todo 2',\n        done: false\n      }, {\n        name: 'Todo 3',\n        done: false\n      }]\n    };\n  }\n\n  addNewTodo(newTodo) {\n    this.setState({\n      todos: [...this.state.todos, newTodo]\n    });\n  }\n\n  countDone() {\n    let done = 0;\n    this.state.todos.forEach(todo => {\n      if (todo.done) {\n        done++;\n      }\n    });\n    return done;\n  }\n\n  clearDone() {\n    const notFinishedTodo = this.state.todos.filter(todo => !todo.done);\n    this.setState({\n      todos: notFinishedTodo\n    });\n  }\n\n  selectAll(right) {\n    const todos = this.state.todos;\n\n    for (let i = 0; i < todos.length; i++) {\n      todos[i].done = right;\n    }\n\n    this.setState({\n      todos: todos\n    });\n  }\n\n  handleDoneChange(todoIndex) {\n    let updatedTodos = this.state.todos;\n    updatedTodos[todoIndex].done = !updatedTodos[todoIndex].done;\n    this.setState({\n      todos: updatedTodos\n    });\n  }\n\n  render() {\n    const done = this.countDone();\n    const totalTodo = this.state.todos.length;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'todo-status',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Stat, {\n      done: done,\n      total: totalTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.selectAll(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Select All\"), \"\\xA0\", React.createElement(\"button\", {\n      onClick: () => this.selectAll(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Unselect All\"), \"\\xA0\", React.createElement(\"button\", {\n      onClick: () => this.clearDone(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Clear Done\")), React.createElement(\"div\", {\n      className: 'todo-list',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, this.state.todos.map((todo, index) => React.createElement(Todo, {\n      onDoneChange: () => {\n        this.handleDoneChange(index);\n      },\n      key: index,\n      todo: todo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: 'new-todo-form',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(NewTodoForm, {\n      onNewToDo: todo => {\n        this.addNewTodo(todo);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/quocco/Desktop/Todos-React-App/src/App.js"],"names":["React","Component","Stat","render","props","done","total","NewTodoForm","state","newTodoName","onInputChange","setState","onNewToDo","even","target","value","name","Todo","todo","todoLableStyle","textDecoration","color","onDoneChange","App","todos","addNewTodo","newTodo","countDone","forEach","clearDone","notFinishedTodo","filter","selectAll","right","i","length","handleDoneChange","todoIndex","updatedTodos","totalTodo","map","index"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n// import Stat               from './Components/StatComponent';\n// import Todo               from './Components/TodoComponent';\n// import NewTodoForm        from './Components/NewTodoFormComponent';\nimport                         './App.css';\n\nclass Stat extends Component {\n  render(){\n    const {done, total} = this.props\n    return (\n      <strong>\n        <span>Done: {done}</span>/<span>Total: {total}</span>\n      </strong>\n    )\n  }\n}\n\nclass NewTodoForm extends Component {\n  state = {\n    newTodoName : ''\n  }\n\n  onInputChange(newTodoName) {\n    this.setState({\n      newTodoName\n    })\n  }\n\n  render() {\n    const {onNewToDo} = this.props\n    return (\n      <div>\n        <input type=\"text\" onChange={(even)=>{\n          this.onInputChange(even.target.value);\n        }} value={this.state.newTodoName}></input>\n        &nbsp;\n        <button types=\"submit\" onClick={\n          () => {\n            onNewToDo(\n              {\n                name: this.state.newTodoName,\n                done: false\n              }\n            )\n          }\n        }>Add</button>\n      </div>\n    )\n  }\n}\n\nclass Todo extends Component{\n\n  render() {\n    const todo = this.props.todo;\n    const todoLableStyle =  this.props.todo.done ? {\n      textDecoration : 'line-through',\n      color: \"gray\"\n    }: {}\n\n    return (\n      <div>\n        <input type=\"checkbox\" onChange={this.props.onDoneChange} checked={todo.done}></input>\n        <span style={todoLableStyle}>{todo.name}</span>\n      </div>\n    );\n  } \n}\n\nexport default class App extends Component {\n  state = {\n    todos: [\n      {name:'Todo 1', done:true},\n      {name:'Todo 2', done:false},\n      {name:'Todo 3', done:false}\n    ]\n  }\n\n  addNewTodo(newTodo) {\n      this.setState({\n      todos:[...this.state.todos, newTodo]\n    })\n  }\n\n  countDone() {\n    let done = 0;\n    this.state.todos.forEach(todo=>{\n      if (todo.done) {\n        done++;\n      }\n    })\n    return done;\n  }\n\n  clearDone() {\n    const notFinishedTodo = this.state.todos.filter((todo) => !todo.done);\n    this.setState({\n      todos:notFinishedTodo\n    })\n  }\n\n  selectAll(right) {\n    const todos = this.state.todos;\n    for (let i = 0; i < todos.length; i++) {\n      todos[i].done = right;\n    }\n    this.setState({\n      todos: todos\n    })\n  }\n\n  handleDoneChange(todoIndex) {\n    let updatedTodos             = this.state.todos;\n    updatedTodos[todoIndex].done = !updatedTodos[todoIndex].done;\n\n    this.setState({\n      todos: updatedTodos\n    })\n  }\n\n  render() {\n    const done      = this.countDone();\n    const totalTodo = this.state.todos.length;\n\n    return (\n      <div>\n        <div className={'todo-status'}>\n          <Stat done={done} total={totalTodo}/><br/>\n          <button onClick={() => this.selectAll(true)}>Select All</button>&nbsp;\n          <button onClick={() => this.selectAll(false)}>Unselect All</button>&nbsp;\n          <button onClick={()=> this.clearDone()}>Clear Done</button>\n        </div>\n\n        <div className={'todo-list'}>\n          <ul>\n            {\n              this.state.todos.map((todo, index)=>(<Todo onDoneChange={()=>{\n                this.handleDoneChange(index);\n              }} key={index} todo={todo} />))\n            }\n          </ul>\n        </div>\n\n        <div className={'new-todo-form'}>\n          <NewTodoForm onNewToDo={(todo)=>{\n            this.addNewTodo(todo)\n          }}/>\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}