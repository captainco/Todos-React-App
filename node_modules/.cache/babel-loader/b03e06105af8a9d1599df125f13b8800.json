{"ast":null,"code":"var _jsxFileName = \"/home/quocco/Desktop/Todos-React-App/src/App.js\";\nimport React, { Component } from 'react';\nimport Stat from './Components/StatComponent';\nimport Todo from './Components/TodoComponent';\nimport NewTodoForm from './Components/NewTodoFormComponent';\nimport './App.css';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [// {name:'Todo 1', done:true},\n        // {name:'Todo 2', done:false},\n        // {name:'Todo 3', done:false}\n      ]\n    };\n  }\n\n  addNewTodo(newTodo) {\n    this.setState({\n      todos: [...this.state.todos, newTodo]\n    });\n  }\n\n  countDone() {\n    let done = 0;\n    this.state.todos.forEach(todo => {\n      if (todo.done) {\n        done++;\n      }\n    });\n    return done;\n  }\n\n  clearDone() {\n    const notFinishedTodo = this.state.todos.filter(todo => !todo.done);\n    this.setState({\n      todos: notFinishedTodo\n    });\n  }\n\n  selectAll(right) {\n    const todos = this.state.todos;\n\n    for (let i = 0; i < todos.length; i++) {\n      todos[i].done = right;\n    }\n\n    this.setState({\n      todos: todos\n    });\n  }\n\n  handleDoneChange(todoIndex) {\n    let updatedTodos = this.state.todos;\n    updatedTodos[todoIndex].done = !updatedTodos[todoIndex].done;\n    this.setState({\n      todos: updatedTodos\n    });\n  }\n\n  render() {\n    const done = this.countDone();\n    const totalTodo = this.state.todos.length;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'todo-status',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Stat, {\n      done: done,\n      total: totalTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.selectAll(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Select All\"), \"\\xA0\", React.createElement(\"button\", {\n      onClick: () => this.selectAll(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Unselect All\"), \"\\xA0\", React.createElement(\"button\", {\n      onClick: () => this.clearDone(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Clear Done\")), React.createElement(\"div\", {\n      className: 'todo-list',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.state.todos.map((todo, index) => React.createElement(Todo, {\n      onDoneChange: () => {\n        this.handleDoneChange(index);\n      },\n      key: index,\n      todo: todo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: 'new-todo-form',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(NewTodoForm, {\n      onNewToDo: todo => {\n        this.addNewTodo(todo);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/quocco/Desktop/Todos-React-App/src/App.js"],"names":["React","Component","Stat","Todo","NewTodoForm","App","state","todos","addNewTodo","newTodo","setState","countDone","done","forEach","todo","clearDone","notFinishedTodo","filter","selectAll","right","i","length","handleDoneChange","todoIndex","updatedTodos","render","totalTodo","map","index"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Stat               from './Components/StatComponent';\nimport Todo               from './Components/TodoComponent';\nimport NewTodoForm        from './Components/NewTodoFormComponent';\nimport                         './App.css';\n\nexport default class App extends Component {\n  state = {\n    todos: [\n      // {name:'Todo 1', done:true},\n      // {name:'Todo 2', done:false},\n      // {name:'Todo 3', done:false}\n    ]\n  }\n\n  addNewTodo(newTodo) {\n      this.setState({\n      todos:[...this.state.todos, newTodo]\n    })\n  }\n\n  countDone() {\n    let done = 0;\n    this.state.todos.forEach(todo=>{\n      if (todo.done) {\n        done++;\n      }\n    })\n    return done;\n  }\n\n  clearDone() {\n    const notFinishedTodo = this.state.todos.filter((todo) => !todo.done);\n    this.setState({\n      todos:notFinishedTodo\n    })\n  }\n\n  selectAll(right) {\n    const todos = this.state.todos;\n    for (let i = 0; i < todos.length; i++) {\n      todos[i].done = right;\n    }\n    this.setState({\n      todos: todos\n    })\n  }\n\n  handleDoneChange(todoIndex) {\n    let updatedTodos             = this.state.todos;\n    updatedTodos[todoIndex].done = !updatedTodos[todoIndex].done;\n\n    this.setState({\n      todos: updatedTodos\n    })\n  }\n\n  \n\n  render() {\n    const done      = this.countDone();\n    const totalTodo = this.state.todos.length;\n\n    return (\n      <div>\n        <div className={'todo-status'}>\n          <Stat done={done} total={totalTodo}/><br/>\n          <button onClick={() => this.selectAll(true)}>Select All</button>&nbsp;\n          <button onClick={() => this.selectAll(false)}>Unselect All</button>&nbsp;\n          <button onClick={()=> this.clearDone()}>Clear Done</button>\n        </div>\n\n        <div className={'todo-list'}>\n          <ul>\n            {\n              this.state.todos.map((todo, index)=>(<Todo onDoneChange={()=>{\n                this.handleDoneChange(index);\n              }} key={index} todo={todo} />))\n            }\n          </ul>\n        </div>\n\n        <div className={'new-todo-form'}>\n          <NewTodoForm onNewToDo={(todo)=>{\n            this.addNewTodo(todo)\n          }}/>\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}